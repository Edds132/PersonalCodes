--PROCEDURE TO VALIDATE IF THE PROD TABLE IS CREATED, IF YES DROP IT TO START AGAIN
CREATE OR REPLACE PROCEDURE prod22_table AS
BEGIN
    DECLARE
        table_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO table_count
        FROM user_tables
        WHERE table_name = 'PROD22';

        IF table_count > 0 THEN
            BEGIN
                EXECUTE IMMEDIATE 'DROP TABLE PROD22';
                DBMS_OUTPUT.PUT_LINE('PROD22 DROPPED');
            EXCEPTION
                WHEN OTHERS THEN
                    DBMS_OUTPUT.PUT_LINE('Error dropping PROD22: ' || SQLCODE || ' - ' || SQLERRM);
            END;
        END IF;
    END;
END prod22_table;

/
--EXCUTE THE PROCEDURE TO DROP THE TABLE
BEGIN
    prod22_table;
END;
/
--CREATE PROD TABLE
CREATE TABLE PROD22 AS 
SELECT prod_no, qoh AS QTY
FROM products;

--PROCEDURE TO VALIDATE IF THE TRANS TABLE IS CREATED, IF YES DROP IT TO START AGAIN
CREATE OR REPLACE PROCEDURE trans22_table AS
BEGIN
    DECLARE
        table_count NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO table_count
        FROM user_tables
        WHERE table_name = 'TRANS22';

        IF table_count > 0 THEN
            BEGIN
                EXECUTE IMMEDIATE 'DROP TABLE TRANS22';
                DBMS_OUTPUT.PUT_LINE('TRANS22 DROPPED');
            EXCEPTION
                WHEN OTHERS THEN
                    DBMS_OUTPUT.PUT_LINE('Error dropping TRANS22: ' || SQLCODE || ' - ' || SQLERRM);
            END;
        END IF;
    END;
END trans22_table;

/
--EXCUTE THE PROCEDURE TO DROP THE TABLE
BEGIN
    trans22_table;
END;
/
--CREATE TRANS TABLE
CREATE TABLE trans22 (
    prod_no NUMBER(5,0),
    action CHAR(1 BYTE),
    amount NUMBER(4,0),
    status VARCHAR2(50 BYTE),
    "WHEN" DATE
);
--INSERT VALUES IN TRANS TABLE
INSERT INTO trans22 VALUES (40100, 'U', 74, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40101, 'U', 11, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40102, 'U', 20, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (60302, 'U', 650, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40100, 'I', -4, NULL, TO_DATE('2023-03-03', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40100, 'I', 10, NULL, TO_DATE('2023-03-05', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (60302, 'I', 20, NULL, TO_DATE('2023-03-06', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (60303, 'I', 10, NULL, TO_DATE('2023-03-02', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40105, 'I', 30, NULL, TO_DATE('2023-03-02', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40105, 'I', -10, NULL, TO_DATE('2023-03-02', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40103, 'U', 0, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (40103, 'D', NULL, NULL, TO_DATE('2023-03-02', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (50100, 'X', 99, NULL, TO_DATE('2023-03-01', 'YYYY-MM-DD'));
INSERT INTO trans22 VALUES (50100, 'U', NULL, NULL, TO_DATE('2023-03-02', 'YYYY-MM-DD'));


-- Display new values in prod22
--SELECT * FROM prod22;

-- Display new values in trans22
--SELECT * FROM trans22;


CREATE OR REPLACE PROCEDURE asingment_2_DBS AS
BEGIN
    FOR t IN (SELECT * FROM trans22) LOOP
        -- Check action and perform corresponding operation
        IF t.action = 'U' THEN
            -- Update qty in prod22 for existing prod_no or insert new row
            UPDATE prod22
            SET qty = t.amount
            WHERE prod_no = t.prod_no;
            
            IF SQL%ROWCOUNT = 0 THEN
                -- Prod_no does not exist, perform insert
                INSERT INTO prod22 VALUES (t.prod_no, t.amount);
                
                UPDATE trans22
                SET status = 'Insert with U action done'
                WHERE action = 'U';
            ELSE
                UPDATE trans22
                SET status = 'Update done'
                WHERE action = 'U';

            END IF;

        ELSIF t.action = 'D' THEN
            -- Delete row from prod22 if prod_no exists, else update status
            DELETE FROM prod22
            WHERE prod_no = t.prod_no;

            IF SQL%ROWCOUNT = 0 THEN
                -- Prod_no does not exist, update status
                UPDATE trans22
                SET status = 'Delete not done, ID does not exist'
                WHERE action = 'D'AND prod_no = t.prod_no;
            ELSE
                -- Prod_no exists, update status
                UPDATE trans22
                SET status = 'Delete done'
                WHERE action = 'D' AND prod_no = t.prod_no;
            END IF;
            
        ELSIF t.action = 'I' THEN
        
            UPDATE prod22
            SET qty = qty + t.amount
            WHERE prod_no = t.prod_no;
            -- Insert new row into prod22 if amount is positive, else update status
            
            IF SQL%ROWCOUNT = 0 THEN
                IF t.amount > 0 THEN
                    INSERT INTO prod22 VALUES (t.prod_no, t.amount);
                    -- Set appropriate message in status column
                    UPDATE trans22
                    SET status = 'Insert done with I action'
                    WHERE action = 'I' AND amount = t.amount AND prod_no = t.prod_no;
                ELSE
                    -- Amount is negative, update status
                    UPDATE trans22
                    SET status = 'Insert not done, amount is negative'
                    WHERE action = 'I';
                END IF;
            ELSE
                UPDATE trans22
                SET status = 'I done to Existing prod_no'
                WHERE action = 'I' AND amount = t.amount AND prod_no = t.prod_no;
            END IF;
        ELSE
            -- Incorrect action code, update status
            UPDATE trans22
            SET status = 'Incorrect operation code'
            WHERE action NOT IN ('I', 'U', 'D');
        END IF;
    END LOOP;
END Asingment_2_DBS;
/
BEGIN
    Asingment_2_DBS;
END;
/
-- Display new values in prod22
SELECT * FROM prod22;

-- Display new values in trans22
SELECT * FROM trans22;

